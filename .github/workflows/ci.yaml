name: ci

on:
  pull_request:
  merge_group:
  push:
    tags:
      - v*.*.*
      - dry-run-v*.*.*

permissions:
  contents: read
  id-token: write

env:
  DENO_VERSION: v2.2.x

jobs:
  validation:
    runs-on: ubuntu-latest

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}

      - name: Run linter
        run: deno lint

      - name: Run check
        run: deno check src mod.ts

      - name: Run format
        run: deno fmt --check src mod.ts

      - name: Run tests
        run: deno task test

  publish:
    runs-on: ubuntu-latest

    needs: validation

    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')

    permissions:
      contents: read
      id-token: write

    env:
      DRY_RUN: "false"

    steps:
      - name: Setup repo
        uses: actions/checkout@v4

      - name: Setup Deno
        uses: denoland/setup-deno@v1
        with:
          deno-version: ${{ env.DENO_VERSION }}

      - name: Check if dry-run
        run: |
          echo "github.ref=${{ github.ref }}"
          if echo "${{ github.ref }}" | grep "dry-run"; then
            echo "Running dry-run"
            echo "DRY_RUN=true" >> $GITHUB_ENV
          else
            echo "Running publish"
            echo "DRY_RUN=false" >> $GITHUB_ENV
          fi

      - name: Extract version from tag
        id: version
        run: |
          # Extract the version from the tag name and set it as an output
          # Remove "refs/tags/" prefix from the tag name
          version=${GITHUB_REF#refs/tags/}
          # Remove the "dry-run-" prefix if it exists
          version=${version#dry-run-}
          # Remove the "v" prefix from the tag name
          version=${version#v}
          # Set the version as an output
          echo "version=${version}" >> $GITHUB_OUTPUT

      - name: Run publish --dry-run
        if: ${{ env.DRY_RUN == 'true' }}
        run: deno publish --dry-run --set-version ${{ steps.version.outputs.version }}

      - name: Run publish
        if: ${{ env.DRY_RUN == 'false' }}
        run: deno publish --set-version ${{ steps.version.outputs.version }}
